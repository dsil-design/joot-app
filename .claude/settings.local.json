{
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm run build:*)",
      "Bash(cd:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run validate:env:*)",
      "Bash(find:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npm test:*)",
      "Bash(npx depcheck:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(npm audit:*)",
      "Bash(npm outdated)",
      "Bash(npm run dev:*)",
      "Bash(grep:*)",
      "Bash(curl:*)",
      "WebFetch(domain:mynaui.com)",
      "Bash(mkdir:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "WebSearch",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__figma-dev-mode-mcp-server__get_image",
      "Bash(rm:*)",
      "WebFetch(domain:ui.shadcn.com)",
      "WebFetch(domain:github.com)",
      "mcp__figma-dev-mode-mcp-server__get_code",
      "mcp__figma-dev-mode-mcp-server__get_variable_defs",
      "Bash(node:*)",
      "Bash(psql:*)",
      "Bash(npx supabase db dump:*)",
      "Bash(cat:*)",
      "Bash(npx supabase migration:*)",
      "Bash(npx supabase:*)",
      "Bash(npx supabase:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(mv:*)",
      "Bash(chmod:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(git add:*)",
      "Bash(npx tsx:*)",
      "Bash(gh run view:*)",
      "Bash(cd:*)",
      "Bash(git commit:*)",
      "Bash(gh workflow run:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm run build)",
      "Bash(gh run list:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key npm run test:unit)",
      "Bash(npm run test:e2e:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key npm run test:coverage)",
      "Bash(npm --version)",
      "Bash(npm ls:*)",
      "Bash(npm prune:*)",
      "Bash(npm ci:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key CI=true npm run test:unit -- --verbose --no-cache --runInBand)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key NODE_ENV=test npm run build)",
      "Bash(gh workflow:*)",
      "Bash(gh run watch:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit)",
      "Bash(npx eslint:*)",
      "Bash(git log:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key npm test -- __tests__/services/)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key npm test -- __tests__/services/ --verbose)",
      "Bash(npm run test:ci:*)",
      "Read(//private/var/folders/**)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm run test:unit -- --verbose --no-cache --runInBand)",
      "mcp__figma-dev-mode-mcp-server__get_code_connect_map",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit --isolatedDeclaration false src/app/login/page.tsx)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit src/app/login/page.tsx)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit src/app/transactions/page.tsx src/components/ui/transaction-card.tsx)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm run test:coverage)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- --testPathPattern=\"home-transaction-card\" --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- --testPathPatterns=\"home-transaction-card\" --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- --testPathPatterns=\"currency-converter\" --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/components/home-transaction-card.test.tsx --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/pages/home.test.tsx --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/pages/transactions.test.tsx --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/components/transaction-card-phase2.test.tsx --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- --verbose --no-cache --runInBand)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/utils/currency-converter.test.ts --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/historical-backfill-job.test.ts --verbose --no-cache)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/historical-backfill-job.test.ts --verbose --no-cache --testTimeout=30000)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/historical-backfill-job.test.ts --verbose --no-cache --testTimeout=10000 --testNamePattern=\"should execute backfill with default configuration\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/historical-backfill-job.test.ts --verbose --no-cache --testNamePattern=\"should execute backfill with default configuration\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/historical-backfill-job.test.ts --verbose --no-cache --testTimeout=10000)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm run test:unit)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/ecb-full-sync-service.test.ts --verbose --no-cache --testTimeout=5000)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/ecb-full-sync-service.test.ts --verbose --no-cache --testTimeout=10000)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm test -- __tests__/services/ecb-full-sync-service.test.ts --verbose --no-cache --testTimeout=10000 --testNamePattern=\"should execute successful manual sync\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-key NODE_ENV=test npm test -- __tests__/components/transaction-card-phase2.test.tsx --verbose --no-cache)",
      "Bash(git stash show:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit src/app/transactions/page.tsx)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npm run build --silent)",
      "mcp__figma-dev-mode-mcp-server__get_metadata",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit src/app/transactions/[id]/page.tsx src/app/transactions/[id]/edit/page.tsx src/hooks/use-transactions.ts)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key SUPABASE_SERVICE_ROLE_KEY=dummy-service-key NODE_ENV=test npx tsc --noEmit \"src/app/transactions/[id]/page.tsx\" \"src/app/transactions/[id]/edit/page.tsx\" \"src/hooks/use-transactions.ts\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/Users/dennis"
    ]
  }
}